===========================================
Kline Like Dataframe time explanation
===========================================


Kline Generating Rule
======================

Kline datas are always like below:

+------------------+-----------+-----------+-----------+-----------+-----------+-----------+
|   timestamp      |   close   |   high    |    low    |    open   |   volume  |  turnover |
+==================+===========+===========+===========+===========+===========+===========+
|2018-01-01 12:00  |    100    |    110    |    90     |    101    |    10000  |  2100000  |
+------------------+-----------+-----------+-----------+-----------+-----------+-----------+
|2018-01-01 12:01  |    100    |    110    |    90     |    101    |    10000  |  2100000  |
+------------------+-----------+-----------+-----------+-----------+-----------+-----------+
|2018-01-01 12:02  |    100    |    110    |    90     |    101    |    10000  |  2100000  |
+------------------+-----------+-----------+-----------+-----------+-----------+-----------+
|2018-01-01 12:03  |    100    |    110    |    90     |    101    |    10000  |  2100000  |
+------------------+-----------+-----------+-----------+-----------+-----------+-----------+
|2018-01-01 12:04  |    100    |    110    |    90     |    101    |    10000  |  2100000  |
+------------------+-----------+-----------+-----------+-----------+-----------+-----------+
|2018-01-01 12:05  |    100    |    110    |    90     |    101    |    10000  |  2100000  |
+------------------+-----------+-----------+-----------+-----------+-----------+-----------+
|2018-01-01 12:06  |    100    |    110    |    90     |    101    |    10000  |  2100000  |
+------------------+-----------+-----------+-----------+-----------+-----------+-----------+

Above is an example of 1 minute kline data. As we know, all the kline datas are
sampled by the trade data during a time frame. 1 minute kline datas are sampled
by the trade data in one minute. So we can always see a timestamp in a kline
data. Here is the explanation about relationship between the timestamp and the
trade data.

In monkq, supposed that we are looking at the kline data in **2018-01-01 12:01**
timestamp. It is generated by the trade data from **2018-01-01 12:00** to
**2018-01-01 12:01** (Not including the data at **2018-01-01 12:00:00.000** but
including the data at **2018-01-01 12:01:00.000**).

Supposed that we have trade data below.

+-------------------------+-----------+-----------+
|        timestamp        |   size    |   price   |
+=========================+===========+===========+
|2018-01-01 12:00:00.000  |    100    |    110    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:00.000  |    110    |    120    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:00.100  |    190    |    130    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:00.000  |    130    |    120    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:00.000  |    120    |    140    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:30.000  |    150    |    150    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:00.000  |    160    |    160    |
+-------------------------+-----------+-----------+
|2018-01-01 12:01:00.000  |    150    |    170    |
+-------------------------+-----------+-----------+
|2018-01-01 12:01:00.000  |    160    |    180    |
+-------------------------+-----------+-----------+
|2018-01-01 12:01:30.000  |    190    |    120    |
+-------------------------+-----------+-----------+

In monkq, the kline data in **2018-01-01 12:01** are using the data below to
generate.

+-------------------------+-----------+-----------+
|        timestamp        |   size    |   price   |
+=========================+===========+===========+
|2018-01-01 12:00:00.100  |    190    |    130    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:00.000  |    130    |    120    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:00.000  |    120    |    140    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:30.000  |    150    |    150    |
+-------------------------+-----------+-----------+
|2018-01-01 12:00:00.000  |    160    |    160    |
+-------------------------+-----------+-----------+
|2018-01-01 12:01:00.000  |    150    |    170    |
+-------------------------+-----------+-----------+
|2018-01-01 12:01:00.000  |    160    |    180    |
+-------------------------+-----------+-----------+

Get Kline In Monkq
======================

Monkq provides some ways for the users to get the kline like
:meth:`~BaseExchange.get_kline`. Let's take an example to explain the get
kline like data in monkq.

Supposed that you are at **2018-01-01 12:01:00.00** in the backtest time. If
you use the :meth:`~BaseExchange.get_kline` to get any instrument **1** minute
kline data. The last kline bar timestamp would be **2018-01-01 12:01:00**.

If you are at **2018-01-01 12:01:59.10** in the backtest time. If
you use the :meth:`~BaseExchange.get_kline` to get any instrument **1** minute
kline data. The last kline bar timestamp would be **2018-01-01 12:01:00**.

This rule can apply to any frequency kline data. Like, If you are at
**2018-01-01 12:01:59.10** in the backtest time, the last kline bar timestamp
would be **2018-01-01 12:00:00.000** if you get the **5** minutes kline data.
